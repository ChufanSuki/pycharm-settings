<templateSet group="Python">
  <template name="ip" value="import ipdb; ipdb.set_trace()" description="import ipdb" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="meta" value="metaclass=abc.ABCMeta" description="metaclass=abc.ABCMeta" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="npi" value="import numpy as np" description="import numpy as np" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="nti" value="import numpy as np&#10;import tensorflow as tf" description="import np and tf" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="iv" value="self._$var$ = $var$" description="initialize variable in class" toReformat="false" toShortenFQNames="true">
    <variable name="var" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="aa" value="$var$=$var$," description="Arguement assignment (same name" toReformat="false" toShortenFQNames="true">
    <variable name="var" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="pls" value="import matplotlib.pyplot as plt&#10;import seaborn as sns" description="import pyplot and seabon" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="plt" value="import matplotlib.pyplot as plt" description="import pyplot" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="load" value="import argparse&#10;import joblib&#10;&#10;&#10;def main(args):&#10;    data = joblib.load(args.file)&#10;&#10;&#10;if __name__ == &quot;__main__&quot;:&#10;    parser = argparse.ArgumentParser()&#10;    parser.add_argument('file', type=str, help='path to the snapshot file')&#10;    args = parser.parse_args()&#10;&#10;    main(args)" description="load joblib file" toReformat="false" toShortenFQNames="true" />
  <template name="loadd" value="import argparse&#10;&#10;import joblib&#10;&#10;if __name__ == &quot;__main__&quot;:&#10;&#10;    parser = argparse.ArgumentParser()&#10;    parser.add_argument('file', type=str,&#10;                        help='path to the snapshot file')&#10;    parser.add_argument('--pause', action='store_true')&#10;    args = parser.parse_args()&#10;    if args.pause:&#10;        import ipdb; ipdb.set_trace()&#10;&#10;    data = joblib.load(args.file)" description="Load data" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
</templateSet>