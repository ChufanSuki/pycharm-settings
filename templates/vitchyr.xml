<templateSet group="vitchyr">
  <template name="test" value="test" description="" toReformat="false" toShortenFQNames="true" />
  <template name="hyp" value="import railrl.misc.hyperparameter as hyp" description="import hyperparameters as hyp" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="sweep" value="    search_space = {&#10;    }&#10;    sweeper = hyp.DeterministicHyperparameterSweeper(&#10;        search_space, default_parameters=variant,&#10;    )&#10;    for exp_id, variant in enumerate(sweeper.iterate_hyperparameters()):&#10;" description="add sweeper" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="vvar" value="$var$ = variant['$var$']" description="Variable from variant dictionary" toReformat="false" toShortenFQNames="true">
    <variable name="var" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="vdict" value="$var$ = $dict$['$var$']" description="Variable assignment from dictionary" toReformat="false" toShortenFQNames="true">
    <variable name="var" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="dict" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="unittest" value="import unittest&#10;&#10;class Test$TestName$(unittest.TestCase):&#10;&#10;    def test_$testone_name$(self):&#10;        pass&#10;&#10;if __name__ == '__main__':&#10;    unittest.main()" shortcut="TAB" description="Unit test" toReformat="false" toShortenFQNames="true">
    <variable name="TestName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="testone_name" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="tfi" value="import tensorflow as tf" description="import tensorflow as tf" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="selfv" value="self.$var$ = $var$" description="self.v = v assignment" toReformat="false" toShortenFQNames="true">
    <variable name="var" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="ptu" value="import railrl.torch.pytorch_util as ptu" description="import pytorch util" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="tftest" value="import unittest&#10;&#10;import numpy as np&#10;import tensorflow as tf&#10;&#10;from railrl.misc.tf_test_case import TFTestCase&#10;&#10;class Test$TestName$(TFTestCase):&#10;&#10;    def test_$test_name$(self):&#10;        $test_function$&#10;&#10;if __name__ == '__main__':&#10;    unittest.main()" description="" toReformat="false" toShortenFQNames="true">
    <variable name="TestName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="test_name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="test_function" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="ssv" value="**variant['$variable$']" description="**variant['variable']" toReformat="false" toShortenFQNames="true">
    <variable name="variable" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
</templateSet>